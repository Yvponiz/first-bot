service: first-bot
provider:
  name: aws
  runtime: nodejs14.x
  region: ca-central-1
  stage: ${env:NODE_ENV}
  tracing:
    apiGateway: true
    lambda: true
  environment:
    NODE_ENV: ${env:NODE_ENV}
    AWS_SNS_QUEUE_URL: { Ref: SuperTopic }
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - secretsmanager:GetSecretValue
        - s3:PutObject
        - s3:GetObject
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - '*'

package:
  exclude:
    - node_modules/**
    - src/**
    - test/**

custom:
  serverless-layers:
    - packageManager: yarn
    - dependenciesPath: ./package.json
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true

resources:
  Resources:
    SuperTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: MyCustomTopic

functions:
  exemple:
    handler: dist/functions/exemple.handler
    events:
      - http:
          path: /status
          method: ANY
          cors: true
      - http:
          path: /status/{proxy+}
          method: ANY
          cors: true
  subscribe:
    handler: dist/functions/subscribe.handler
    events:
      - http:
          path: /subscriptions
          method: ANY
          cors: true
      - http:
          path: /subscriptions/{proxy+}
          method: ANY
          cors: true
  listen:
    handler: dist/functions/listen.handler
    events:
      - http:
          path: /events
          method: ANY
          cors: true
      - http:
          path: /events/{proxy+}
          method: ANY
          cors: true

plugins:
  - serverless-offline
  - serverless-layers
  - serverless-dynamodb-local